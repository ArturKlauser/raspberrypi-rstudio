# Docker build file for RStudio Server runtime environment.
#
# This image can either be cross-built on an x86 host or built natively on a
# Raspberry Pi3 B+ (RP3).
#
# We depend on the image generated by Dockerfile.build which contains the
# built Debian packages. This is a multi-stage build that tries to reduce
# image size. We jettison the original build environment and install the
# .deb package in a fresh Debian runtime image (build stage "install-minimal").
# This image contains everything that is necessary to run rstudio-server and
# use it's basic functionality. However, some RStudio functionality will not
# be supported, e.g. working with .Rmd files will require the lengthy
# installation of additional system packages and R libraries. If you want
# this functionality you can use the image generated by the "install-full"
# build stage (default), that adds such dependencies for the price of
# resulting in a significantly larger docker image.
#
# Run the build like so:
#   docker build -t raspberrypi-rstudio-server -f Dockerfile.server .
#
# To use the docker image mount a working directory from your Raspberry Pi
# host into the container at runtime. By default, RStudio will store all
# your files in this working directory so they survive across container
# invocations. An example invocation is:
#   docker run --rm --name rserver -v $PWD/work:/home/rstudio -p 8787:8787 -d \
#     raspberrypi-rstudio-server
# Once the container has started you can point your web browser to your host
# machine port 8787 to connect to the rstudio server. Log in with user
# "rstudio" and password "raspberry" (without the quotes) to start working.
# When you're done you may remove the server with
#   docker rm -f rserver

# Import build image containing the built .deb package.
FROM arturklauser/raspberrypi-rstudio-build as build

#===== Build stage: install-minimal. =====

# See https://www.balena.io/docs/reference/base-images/base-images/
FROM balenalib/raspberrypi3-debian:stretch-run as install-minimal

COPY --from=build /home/pi/Downloads/rstudio/build/rstudio-server-1.1.463-1~r2r_armhf.deb .

# Balenalib images for arm can be cross-built on x86.
# Comment out next line for native build.
RUN [ "cross-build-start" ]

# User and password for rstudio-server web login.
ARG USER=rstudio
ARG PASSWORD=raspberry
RUN apt-get update \
    && apt-get install -y r-base locales \
    && localedef -f UTF-8 -i en_US en_US.UTF-8 \
    && apt install ./rstudio-server-1.1.463-1~r2r_armhf.deb \
    && apt-get clean \
    && rm ./rstudio-server-1.1.463-1~r2r_armhf.deb \
    && useradd -m -p $(perl -e "print crypt('"${PASSWORD}"','pi');") ${USER}

ENV LANG=en_US.UTF-8 \
    LANGUAGE=en_US.UTF-8

# Expose rstudio-server listen port.
EXPOSE 8787

CMD rstudio-server start; while true; do sleep 10000; done

#===== Build stage: install-full. =====

FROM install-minimal as install-full

# Add additional packages to make R/RStudio more useful:
#   * for R packages installed from source (build-essential etc.)
#   * for knit-to-HTML of .Rmd files (pandoc etc.)
#   * various r-cran packages needed for handling .Rmd files (catools etc.)
#   * various R libraries not available as r-cran packages needed for handling .Rmd files (rmarkdown etc.)
#   * Latex for .Rmd to PDF conversion
#   * source code versioning (git etc.)
RUN set -x \
    apt-get update \
    # packages for C, C++, Fortran build environment
    && apt-get install -y \
       build-essential \
       gfortran \
       libblas-dev \
       pkg-config

RUN set -x \
    # compiler CRAN package for install.packages() below
    && apt-get install -y \
       r-cran-rcpp

RUN set -x \
    # R libraries for .Rmd file handling
    && Rscript -e 'install.packages(c("rmarkdown", "rprojroot"), \
                                    repos="http://cran.rstudio.com")'

RUN set -x \
    # CRAN packages for .Rmd file handling
    && apt-get install -y \
       r-cran-catools \
    # .Rmd to HTML and PDF conversion
    && apt-get install -y \
      pandoc \
      pandoc-citeproc \
      texlive-latex-extra \
      texlive-generic-extra \
      texlive-fonts-recommended \
      lmodern

# Can't get CRAN package "fs" to build successfully on Raspbian Stretch.
# Failed packages: fs (/home/rstudio/R/arm-unknown-linux-gnueabihf-library/3.3/fs/libs/fs.so: undefined symbol: pthread_atfork)
# RUN set -x \
#     # devtools for "New Project - R package using devtools'
#     && apt-get install -y \
#       libgit2-dev \
#       libssl-dev \
#       r-cran-crayon \
#       r-cran-curl \
#       r-cran-httr \
#       r-cran-memoise \
#       r-cran-openssl \
#       r-cran-prettyunits \
#       r-cran-r6 \
#       r-cran-withr \
#       zlib1g-dev \
#     && Rscript -e 'install.packages(c("devtools"), \
#                                     repos="http://cran.rstudio.com")'

RUN set -x \
    # misc libraries for R packages
    && apt-get install -y libcurl4-openssl-dev \
    # packages for RStudio project version control
    && apt-get install -y --install-recommends git subversion \
    && apt-get clean

# Comment out next line for native build.
RUN [ "cross-build-end" ]
